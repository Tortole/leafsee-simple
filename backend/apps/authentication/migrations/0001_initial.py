# Generated by Django 5.0.4 on 2024-04-08 08:01

import backend.apps.authentication.validators
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="LeafseeUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        max_length=140,
                        unique=True,
                        validators=[
                            backend.apps.authentication.validators.UsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                ("email", models.EmailField(max_length=140, verbose_name="email")),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        max_length=140,
                        validators=[
                            backend.apps.authentication.validators.FirstNameValidator()
                        ],
                        verbose_name="first name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        max_length=140,
                        validators=[
                            backend.apps.authentication.validators.LastNameValidator()
                        ],
                        verbose_name="last name",
                    ),
                ),
                (
                    "nickname",
                    models.CharField(
                        blank=True,
                        max_length=140,
                        validators=[
                            backend.apps.authentication.validators.NicknameValidator()
                        ],
                        verbose_name="nickname",
                    ),
                ),
                (
                    "description",
                    models.TextField(verbose_name="user's self-description"),
                ),
                (
                    "password_change_date",
                    models.DateField(verbose_name="last password change date"),
                ),
                ("avatar", models.ImageField(upload_to="")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Subscriptions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subscriptions_date", models.DateField(auto_now_add=True)),
                (
                    "content_creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_creator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "subscriber",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriber",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="leafseeuser",
            name="subscriptions",
            field=models.ManyToManyField(
                through="authentication.Subscriptions", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddConstraint(
            model_name="subscriptions",
            constraint=models.UniqueConstraint(
                fields=("subscriber", "content_creator"), name="unique_subscriptions"
            ),
        ),
    ]
